

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Feb 01 00:08:22 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   00FB38                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _Port_Register
    65   00FB38  80                 	db	128
    66   00FB39  0F                 	db	15
    67   00FB3A  81                 	db	129
    68   00FB3B  0F                 	db	15
    69   00FB3C  82                 	db	130
    70   00FB3D  0F                 	db	15
    71   00FB3E  83                 	db	131
    72   00FB3F  0F                 	db	15
    73   00FB40  84                 	db	132
    74   00FB41  0F                 	db	15
    75                           
    76                           ;initializer for _Lat_Register
    77   00FB42  89                 	db	137
    78   00FB43  0F                 	db	15
    79   00FB44  8A                 	db	138
    80   00FB45  0F                 	db	15
    81   00FB46  8B                 	db	139
    82   00FB47  0F                 	db	15
    83   00FB48  8C                 	db	140
    84   00FB49  0F                 	db	15
    85   00FB4A  8D                 	db	141
    86   00FB4B  0F                 	db	15
    87                           
    88                           ;initializer for _Tris_Register
    89   00FB4C  92                 	db	146
    90   00FB4D  0F                 	db	15
    91   00FB4E  93                 	db	147
    92   00FB4F  0F                 	db	15
    93   00FB50  94                 	db	148
    94   00FB51  0F                 	db	15
    95   00FB52  95                 	db	149
    96   00FB53  0F                 	db	15
    97   00FB54  96                 	db	150
    98   00FB55  0F                 	db	15
    99                           
   100                           ;initializer for _dc_motor2
   101   00FB56  10                 	db	16
   102   00FB57  18                 	db	24
   103                           
   104                           ;initializer for _dc_motor1
   105   00FB58  00                 	db	0
   106   00FB59  08                 	db	8
   107   000000                     _PORTE	set	3972
   108   000000                     _PORTD	set	3971
   109   000000                     _PORTC	set	3970
   110   000000                     _PORTB	set	3969
   111   000000                     _PORTA	set	3968
   112   000000                     _LATA	set	3977
   113   000000                     _TRISA	set	3986
   114   000000                     _TRISE	set	3990
   115   000000                     _TRISD	set	3989
   116   000000                     _TRISC	set	3988
   117   000000                     _TRISB	set	3987
   118   000000                     _LATE	set	3981
   119   000000                     _LATD	set	3980
   120   000000                     _LATC	set	3979
   121   000000                     _LATB	set	3978
   122                           
   123                           ; #config settings
   124                           
   125                           	psect	cinit
   126   00FB5A                     __pcinit:
   127                           	callstack 0
   128   00FB5A                     start_initialization:
   129                           	callstack 0
   130   00FB5A                     __initialization:
   131                           	callstack 0
   132                           
   133                           ; Initialize objects allocated to COMRAM (34 bytes)
   134                           ; load TBLPTR registers with __pidataCOMRAM
   135   00FB5A  0E38               	movlw	low __pidataCOMRAM
   136   00FB5C  6EF6               	movwf	tblptrl,c
   137   00FB5E  0EFB               	movlw	high __pidataCOMRAM
   138   00FB60  6EF7               	movwf	tblptrh,c
   139   00FB62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   140   00FB64  6EF8               	movwf	tblptru,c
   141   00FB66  EE00  F001         	lfsr	0,__pdataCOMRAM
   142   00FB6A  EE10 F022          	lfsr	1,34
   143   00FB6E                     copy_data0:
   144   00FB6E  0009               	tblrd		*+
   145   00FB70  CFF5 FFEE          	movff	tablat,postinc0
   146   00FB74  50E5               	movf	postdec1,w,c
   147   00FB76  50E1               	movf	fsr1l,w,c
   148   00FB78  E1FA               	bnz	copy_data0
   149                           
   150                           ; Clear objects allocated to COMRAM (1 bytes)
   151   00FB7A  6A35               	clrf	__pbssCOMRAM& (0+255),c
   152   00FB7C                     end_of_initialization:
   153                           	callstack 0
   154   00FB7C                     __end_of__initialization:
   155                           	callstack 0
   156   00FB7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   157   00FB7E  6EF8               	movwf	tblptru,c
   158   00FB80  0100               	movlb	0
   159   00FB82  EF6D  F07E         	goto	_main	;jump to C main() function
   160                           
   161                           	psect	bssCOMRAM
   162   000035                     __pbssCOMRAM:
   163                           	callstack 0
   164   000035                     _ret:
   165                           	callstack 0
   166   000035                     	ds	1
   167                           
   168                           	psect	dataCOMRAM
   169   000001                     __pdataCOMRAM:
   170                           	callstack 0
   171   000001                     _Port_Register:
   172                           	callstack 0
   173   000001                     	ds	10
   174   00000B                     _Lat_Register:
   175                           	callstack 0
   176   00000B                     	ds	10
   177   000015                     _Tris_Register:
   178                           	callstack 0
   179   000015                     	ds	10
   180   00001F                     _dc_motor2:
   181                           	callstack 0
   182   00001F                     	ds	2
   183   000021                     _dc_motor1:
   184                           	callstack 0
   185   000021                     	ds	2
   186                           
   187                           	psect	cstackCOMRAM
   188   000023                     __pcstackCOMRAM:
   189                           	callstack 0
   190   000023                     gpio_pin_directoin_initialize@pin:
   191                           	callstack 0
   192   000023                     gpio_pin_write_logic@pin:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x0
   196   000023                     	ds	2
   197   000025                     ??_gpio_pin_directoin_initialize:
   198   000025                     gpio_pin_write_logic@logic:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x2
   202   000025                     	ds	1
   203   000026                     ??_gpio_pin_write_logic:
   204                           
   205                           ; 1 bytes @ 0x3
   206   000026                     	ds	5
   207   00002B                     gpio_pin_directoin_initialize@ret:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x8
   211   00002B                     	ds	1
   212   00002C                     gpio_pin_write_logic@ret:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x9
   216   00002C                     	ds	1
   217   00002D                     gpio_pin_initialize@pin:
   218                           	callstack 0
   219   00002D                     DC_Motor_Move_Right@_dc_motor:
   220                           	callstack 0
   221   00002D                     DC_Motor_Move_Left@_dc_motor:
   222                           	callstack 0
   223   00002D                     DC_Motor_Stop@_dc_motor:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0xA
   227   00002D                     	ds	2
   228   00002F                     gpio_pin_initialize@ret:
   229                           	callstack 0
   230   00002F                     DC_Motor_Move_Right@ret:
   231                           	callstack 0
   232   00002F                     DC_Motor_Move_Left@ret:
   233                           	callstack 0
   234   00002F                     DC_Motor_Stop@ret:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0xC
   238   00002F                     	ds	1
   239   000030                     DC_Motor_Initialize@_dc_motor:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0xD
   243   000030                     	ds	2
   244   000032                     DC_Motor_Initialize@ret:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0xF
   248   000032                     	ds	1
   249   000033                     ??_main:
   250                           
   251                           ; 1 bytes @ 0x10
   252   000033                     	ds	2
   253                           
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 33 in file "Application.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;  ret             1    0        unsigned char 
   264 ;; Return value:  Size  Location     Type
   265 ;;                  2  129[None  ] int 
   266 ;; Registers used:
   267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;Total ram usage:        2 bytes
   278 ;; Hardware stack levels required when called: 4
   279 ;; This function calls:
   280 ;;		_DC_Motor_Move_Left
   281 ;;		_DC_Motor_Move_Right
   282 ;;		_DC_Motor_Stop
   283 ;;		_application_initialize
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text0
   290   00FCDA                     __ptext0:
   291                           	callstack 0
   292   00FCDA                     _main:
   293                           	callstack 27
   294   00FCDA                     
   295                           ;Application.c: 36:     application_initialize();
   296   00FCDA  EC8F  F07D         	call	_application_initialize	;wreg free
   297   00FCDE                     l1234:
   298   00FCDE  0E21               	movlw	low _dc_motor1
   299   00FCE0  6E2D               	movwf	DC_Motor_Move_Left@_dc_motor^0,c
   300   00FCE2  0E00               	movlw	high _dc_motor1
   301   00FCE4  6E2E               	movwf	(DC_Motor_Move_Left@_dc_motor+1)^0,c
   302   00FCE6  EC04  F07E         	call	_DC_Motor_Move_Left	;wreg free
   303   00FCEA  0E1F               	movlw	low _dc_motor2
   304   00FCEC  6E2D               	movwf	DC_Motor_Move_Left@_dc_motor^0,c
   305   00FCEE  0E00               	movlw	high _dc_motor2
   306   00FCF0  6E2E               	movwf	(DC_Motor_Move_Left@_dc_motor+1)^0,c
   307   00FCF2  EC04  F07E         	call	_DC_Motor_Move_Left	;wreg free
   308   00FCF6                     
   309                           ;Application.c: 41:         _delay((unsigned long)((3000)*(4000000/4000.0)));
   310   00FCF6  0E10               	movlw	16
   311   00FCF8  6E34               	movwf	(??_main+1)^0,c
   312   00FCFA  0E39               	movlw	57
   313   00FCFC  6E33               	movwf	??_main^0,c
   314   00FCFE  0E0E               	movlw	14
   315   00FD00                     u407:
   316   00FD00  2EE8               	decfsz	wreg,f,c
   317   00FD02  D7FE               	bra	u407
   318   00FD04  2E33               	decfsz	??_main^0,f,c
   319   00FD06  D7FC               	bra	u407
   320   00FD08  2E34               	decfsz	(??_main+1)^0,f,c
   321   00FD0A  D7FA               	bra	u407
   322   00FD0C  0E21               	movlw	low _dc_motor1
   323   00FD0E  6E2D               	movwf	DC_Motor_Move_Right@_dc_motor^0,c
   324   00FD10  0E00               	movlw	high _dc_motor1
   325   00FD12  6E2E               	movwf	(DC_Motor_Move_Right@_dc_motor+1)^0,c
   326   00FD14  EC27  F07E         	call	_DC_Motor_Move_Right	;wreg free
   327   00FD18  0E1F               	movlw	low _dc_motor2
   328   00FD1A  6E2D               	movwf	DC_Motor_Move_Right@_dc_motor^0,c
   329   00FD1C  0E00               	movlw	high _dc_motor2
   330   00FD1E  6E2E               	movwf	(DC_Motor_Move_Right@_dc_motor+1)^0,c
   331   00FD20  EC27  F07E         	call	_DC_Motor_Move_Right	;wreg free
   332   00FD24                     
   333                           ;Application.c: 44:         _delay((unsigned long)((3000)*(4000000/4000.0)));
   334   00FD24  0E10               	movlw	16
   335   00FD26  6E34               	movwf	(??_main+1)^0,c
   336   00FD28  0E39               	movlw	57
   337   00FD2A  6E33               	movwf	??_main^0,c
   338   00FD2C  0E0E               	movlw	14
   339   00FD2E                     u417:
   340   00FD2E  2EE8               	decfsz	wreg,f,c
   341   00FD30  D7FE               	bra	u417
   342   00FD32  2E33               	decfsz	??_main^0,f,c
   343   00FD34  D7FC               	bra	u417
   344   00FD36  2E34               	decfsz	(??_main+1)^0,f,c
   345   00FD38  D7FA               	bra	u417
   346   00FD3A  0E21               	movlw	low _dc_motor1
   347   00FD3C  6E2D               	movwf	DC_Motor_Stop@_dc_motor^0,c
   348   00FD3E  0E00               	movlw	high _dc_motor1
   349   00FD40  6E2E               	movwf	(DC_Motor_Stop@_dc_motor+1)^0,c
   350   00FD42  EC4A  F07E         	call	_DC_Motor_Stop	;wreg free
   351   00FD46  0E1F               	movlw	low _dc_motor2
   352   00FD48  6E2D               	movwf	DC_Motor_Stop@_dc_motor^0,c
   353   00FD4A  0E00               	movlw	high _dc_motor2
   354   00FD4C  6E2E               	movwf	(DC_Motor_Stop@_dc_motor+1)^0,c
   355   00FD4E  EC4A  F07E         	call	_DC_Motor_Stop	;wreg free
   356   00FD52                     
   357                           ;Application.c: 48:         _delay((unsigned long)((3000)*(4000000/4000.0)));
   358   00FD52  0E10               	movlw	16
   359   00FD54  6E34               	movwf	(??_main+1)^0,c
   360   00FD56  0E39               	movlw	57
   361   00FD58  6E33               	movwf	??_main^0,c
   362   00FD5A  0E0E               	movlw	14
   363   00FD5C                     u427:
   364   00FD5C  2EE8               	decfsz	wreg,f,c
   365   00FD5E  D7FE               	bra	u427
   366   00FD60  2E33               	decfsz	??_main^0,f,c
   367   00FD62  D7FC               	bra	u427
   368   00FD64  2E34               	decfsz	(??_main+1)^0,f,c
   369   00FD66  D7FA               	bra	u427
   370   00FD68  0E21               	movlw	low _dc_motor1
   371   00FD6A  6E2D               	movwf	DC_Motor_Move_Right@_dc_motor^0,c
   372   00FD6C  0E00               	movlw	high _dc_motor1
   373   00FD6E  6E2E               	movwf	(DC_Motor_Move_Right@_dc_motor+1)^0,c
   374   00FD70  EC27  F07E         	call	_DC_Motor_Move_Right	;wreg free
   375   00FD74  0E1F               	movlw	low _dc_motor2
   376   00FD76  6E2D               	movwf	DC_Motor_Move_Left@_dc_motor^0,c
   377   00FD78  0E00               	movlw	high _dc_motor2
   378   00FD7A  6E2E               	movwf	(DC_Motor_Move_Left@_dc_motor+1)^0,c
   379   00FD7C  EC04  F07E         	call	_DC_Motor_Move_Left	;wreg free
   380   00FD80                     
   381                           ;Application.c: 51:         _delay((unsigned long)((3000)*(4000000/4000.0)));
   382   00FD80  0E10               	movlw	16
   383   00FD82  6E34               	movwf	(??_main+1)^0,c
   384   00FD84  0E39               	movlw	57
   385   00FD86  6E33               	movwf	??_main^0,c
   386   00FD88  0E0E               	movlw	14
   387   00FD8A                     u437:
   388   00FD8A  2EE8               	decfsz	wreg,f,c
   389   00FD8C  D7FE               	bra	u437
   390   00FD8E  2E33               	decfsz	??_main^0,f,c
   391   00FD90  D7FC               	bra	u437
   392   00FD92  2E34               	decfsz	(??_main+1)^0,f,c
   393   00FD94  D7FA               	bra	u437
   394   00FD96  0E1F               	movlw	low _dc_motor2
   395   00FD98  6E2D               	movwf	DC_Motor_Move_Right@_dc_motor^0,c
   396   00FD9A  0E00               	movlw	high _dc_motor2
   397   00FD9C  6E2E               	movwf	(DC_Motor_Move_Right@_dc_motor+1)^0,c
   398   00FD9E  EC27  F07E         	call	_DC_Motor_Move_Right	;wreg free
   399   00FDA2  0E21               	movlw	low _dc_motor1
   400   00FDA4  6E2D               	movwf	DC_Motor_Move_Left@_dc_motor^0,c
   401   00FDA6  0E00               	movlw	high _dc_motor1
   402   00FDA8  6E2E               	movwf	(DC_Motor_Move_Left@_dc_motor+1)^0,c
   403   00FDAA  EC04  F07E         	call	_DC_Motor_Move_Left	;wreg free
   404   00FDAE                     
   405                           ;Application.c: 54:         _delay((unsigned long)((3000)*(4000000/4000.0)));
   406   00FDAE  0E10               	movlw	16
   407   00FDB0  6E34               	movwf	(??_main+1)^0,c
   408   00FDB2  0E39               	movlw	57
   409   00FDB4  6E33               	movwf	??_main^0,c
   410   00FDB6  0E0E               	movlw	14
   411   00FDB8                     u447:
   412   00FDB8  2EE8               	decfsz	wreg,f,c
   413   00FDBA  D7FE               	bra	u447
   414   00FDBC  2E33               	decfsz	??_main^0,f,c
   415   00FDBE  D7FC               	bra	u447
   416   00FDC0  2E34               	decfsz	(??_main+1)^0,f,c
   417   00FDC2  D7FA               	bra	u447
   418   00FDC4  EF6F  F07E         	goto	l1234
   419   00FDC8  EF00  F000         	goto	start
   420   00FDCC                     __end_of_main:
   421                           	callstack 0
   422                           
   423 ;; *************** function _application_initialize *****************
   424 ;; Defined at:
   425 ;;		line 60 in file "Application.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  ret             1    0        unsigned char 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   443 ;;Total ram usage:        0 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; Hardware stack levels required when called: 3
   446 ;; This function calls:
   447 ;;		_DC_Motor_Initialize
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text1
   454   00FB1E                     __ptext1:
   455                           	callstack 0
   456   00FB1E                     _application_initialize:
   457                           	callstack 27
   458   00FB1E  0E21               	movlw	low _dc_motor1
   459   00FB20  6E30               	movwf	DC_Motor_Initialize@_dc_motor^0,c
   460   00FB22  0E00               	movlw	high _dc_motor1
   461   00FB24  6E31               	movwf	(DC_Motor_Initialize@_dc_motor+1)^0,c
   462   00FB26  ECC3  F07D         	call	_DC_Motor_Initialize	;wreg free
   463   00FB2A  0E1F               	movlw	low _dc_motor2
   464   00FB2C  6E30               	movwf	DC_Motor_Initialize@_dc_motor^0,c
   465   00FB2E  0E00               	movlw	high _dc_motor2
   466   00FB30  6E31               	movwf	(DC_Motor_Initialize@_dc_motor+1)^0,c
   467   00FB32  ECC3  F07D         	call	_DC_Motor_Initialize	;wreg free
   468   00FB36  0012               	return		;funcret
   469   00FB38                     __end_of_application_initialize:
   470                           	callstack 0
   471                           
   472 ;; *************** function _DC_Motor_Initialize *****************
   473 ;; Defined at:
   474 ;;		line 10 in file "ECU_Layer/Motor/Motor_Driver.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;  _dc_motor       2   13[COMRAM] PTR const struct .
   477 ;;		 -> dc_motor2(2), dc_motor1(2), 
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  ret             1   15[COMRAM] unsigned char 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      unsigned char 
   482 ;; Registers used:
   483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;Total ram usage:        3 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 2
   496 ;; This function calls:
   497 ;;		_gpio_pin_initialize
   498 ;; This function is called by:
   499 ;;		_application_initialize
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text2
   504   00FB86                     __ptext2:
   505                           	callstack 0
   506   00FB86                     _DC_Motor_Initialize:
   507                           	callstack 27
   508   00FB86                     
   509                           ;ECU_Layer/Motor/Motor_Driver.c: 13:     if(((void*)0) == _dc_motor)
   510   00FB86  5030               	movf	DC_Motor_Initialize@_dc_motor^0,w,c
   511   00FB88  1031               	iorwf	(DC_Motor_Initialize@_dc_motor+1)^0,w,c
   512   00FB8A  A4D8               	btfss	status,2,c
   513   00FB8C  EFCA  F07D         	goto	u361
   514   00FB90  EFCC  F07D         	goto	u360
   515   00FB94                     u361:
   516   00FB94  EFD0  F07D         	goto	l1174
   517   00FB98                     u360:
   518   00FB98                     
   519                           ;ECU_Layer/Motor/Motor_Driver.c: 14:     {;ECU_Layer/Motor/Motor_Driver.c: 15:         r
      +                          et = (Std_ReturnType)0X00;
   520   00FB98  0E00               	movlw	0
   521   00FB9A  6E32               	movwf	DC_Motor_Initialize@ret^0,c
   522                           
   523                           ;ECU_Layer/Motor/Motor_Driver.c: 16:     }
   524   00FB9C  EFE0  F07D         	goto	l1178
   525   00FBA0                     l1174:
   526                           
   527                           ;ECU_Layer/Motor/Motor_Driver.c: 18:     {;ECU_Layer/Motor/Motor_Driver.c: 28:         g
      +                          pio_pin_initialize(&(_dc_motor->dc_motor_pin[0X00U]));
   528   00FBA0  C030  F02D         	movff	DC_Motor_Initialize@_dc_motor,gpio_pin_initialize@pin
   529   00FBA4  C031  F02E         	movff	DC_Motor_Initialize@_dc_motor+1,gpio_pin_initialize@pin+1
   530   00FBA8  ECE2  F07D         	call	_gpio_pin_initialize	;wreg free
   531                           
   532                           ;ECU_Layer/Motor/Motor_Driver.c: 29:         gpio_pin_initialize(&(_dc_motor->dc_motor_p
      +                          in[0X01U]));
   533   00FBAC  0E01               	movlw	1
   534   00FBAE  2430               	addwf	DC_Motor_Initialize@_dc_motor^0,w,c
   535   00FBB0  6E2D               	movwf	gpio_pin_initialize@pin^0,c
   536   00FBB2  0E00               	movlw	0
   537   00FBB4  2031               	addwfc	(DC_Motor_Initialize@_dc_motor+1)^0,w,c
   538   00FBB6  6E2E               	movwf	(gpio_pin_initialize@pin+1)^0,c
   539   00FBB8  ECE2  F07D         	call	_gpio_pin_initialize	;wreg free
   540   00FBBC                     
   541                           ;ECU_Layer/Motor/Motor_Driver.c: 30:         ret = (Std_ReturnType)0X01;
   542   00FBBC  0E01               	movlw	1
   543   00FBBE  6E32               	movwf	DC_Motor_Initialize@ret^0,c
   544   00FBC0                     l1178:
   545                           
   546                           ;ECU_Layer/Motor/Motor_Driver.c: 32:     return ret;
   547   00FBC0  5032               	movf	DC_Motor_Initialize@ret^0,w,c
   548   00FBC2  0012               	return		;funcret
   549   00FBC4                     __end_of_DC_Motor_Initialize:
   550                           	callstack 0
   551                           
   552 ;; *************** function _gpio_pin_initialize *****************
   553 ;; Defined at:
   554 ;;		line 16 in file "MCAL_Layer/GPIO/HAL_GPIO.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  pin             2   10[COMRAM] PTR const struct .
   557 ;;		 -> dc_motor2.dc_motor_pin(2), dc_motor2(2), dc_motor1.dc_motor_pin(2), dc_motor1(2), 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  ret             1   12[COMRAM] unsigned char 
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      unsigned char 
   562 ;; Registers used:
   563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;Total ram usage:        3 bytes
   574 ;; Hardware stack levels used: 1
   575 ;; Hardware stack levels required when called: 1
   576 ;; This function calls:
   577 ;;		_gpio_pin_directoin_initialize
   578 ;;		_gpio_pin_write_logic
   579 ;; This function is called by:
   580 ;;		_DC_Motor_Initialize
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text3
   585   00FBC4                     __ptext3:
   586                           	callstack 0
   587   00FBC4                     _gpio_pin_initialize:
   588                           	callstack 27
   589   00FBC4                     
   590                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 20:     if(((void*)0) == pin)
   591   00FBC4  502D               	movf	gpio_pin_initialize@pin^0,w,c
   592   00FBC6  102E               	iorwf	(gpio_pin_initialize@pin+1)^0,w,c
   593   00FBC8  A4D8               	btfss	status,2,c
   594   00FBCA  EFE9  F07D         	goto	u351
   595   00FBCE  EFEB  F07D         	goto	u350
   596   00FBD2                     u351:
   597   00FBD2  EFED  F07D         	goto	l1162
   598   00FBD6                     u350:
   599   00FBD6                     
   600                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 23:     }
   601   00FBD6  EF03  F07E         	goto	l45
   602   00FBDA                     l1162:
   603                           
   604                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 25:     {;MCAL_Layer/GPIO/HAL_GPIO.c: 26:         ret = gpi
      +                          o_pin_directoin_initialize(pin);
   605   00FBDA  C02D  F023         	movff	gpio_pin_initialize@pin,gpio_pin_directoin_initialize@pin
   606   00FBDE  C02E  F024         	movff	gpio_pin_initialize@pin+1,gpio_pin_directoin_initialize@pin+1
   607   00FBE2  EC6D  F07F         	call	_gpio_pin_directoin_initialize	;wreg free
   608   00FBE6  6E2F               	movwf	gpio_pin_initialize@ret^0,c
   609                           
   610                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 27:         ret = gpio_pin_write_logic(pin,pin->logic);
   611   00FBE8  C02D  F023         	movff	gpio_pin_initialize@pin,gpio_pin_write_logic@pin
   612   00FBEC  C02E  F024         	movff	gpio_pin_initialize@pin+1,gpio_pin_write_logic@pin+1
   613   00FBF0  C02D  FFD9         	movff	gpio_pin_initialize@pin,fsr2l
   614   00FBF4  C02E  FFDA         	movff	gpio_pin_initialize@pin+1,fsr2h
   615   00FBF8  0E00               	movlw	0
   616   00FBFA  BCDF               	btfsc	indf2,6,c
   617   00FBFC  0E01               	movlw	1
   618   00FBFE  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   619   00FC00  ECE6  F07E         	call	_gpio_pin_write_logic	;wreg free
   620   00FC04  6E2F               	movwf	gpio_pin_initialize@ret^0,c
   621   00FC06                     l45:
   622   00FC06  0012               	return		;funcret
   623   00FC08                     __end_of_gpio_pin_initialize:
   624                           	callstack 0
   625                           
   626 ;; *************** function _gpio_pin_directoin_initialize *****************
   627 ;; Defined at:
   628 ;;		line 32 in file "MCAL_Layer/GPIO/HAL_GPIO.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  pin             2    0[COMRAM] PTR const struct .
   631 ;;		 -> dc_motor2.dc_motor_pin(2), dc_motor2(2), dc_motor1.dc_motor_pin(2), dc_motor1(2), 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  ret             1    8[COMRAM] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      unsigned char 
   636 ;; Registers used:
   637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;Total ram usage:        9 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_gpio_pin_initialize
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text4
   657   00FEDA                     __ptext4:
   658                           	callstack 0
   659   00FEDA                     _gpio_pin_directoin_initialize:
   660                           	callstack 27
   661   00FEDA                     
   662                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 35:     if(((void*)0) == pin)
   663   00FEDA  5023               	movf	gpio_pin_directoin_initialize@pin^0,w,c
   664   00FEDC  1024               	iorwf	(gpio_pin_directoin_initialize@pin+1)^0,w,c
   665   00FEDE  A4D8               	btfss	status,2,c
   666   00FEE0  EF74  F07F         	goto	u271
   667   00FEE4  EF76  F07F         	goto	u270
   668   00FEE8                     u271:
   669   00FEE8  EFDD  F07F         	goto	l1120
   670   00FEEC                     u270:
   671   00FEEC  EFDD  F07F         	goto	l1120
   672   00FEF0                     l1110:
   673                           
   674                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 43:             (*Tris_Register[pin->port] &= ~((uint8)1<<p
      +                          in->pin));
   675   00FEF0  C023  FFD9         	movff	gpio_pin_directoin_initialize@pin,fsr2l
   676   00FEF4  C024  FFDA         	movff	gpio_pin_directoin_initialize@pin+1,fsr2h
   677   00FEF8  30DF               	rrcf	223,w,c
   678   00FEFA  32E8               	rrcf	wreg,f,c
   679   00FEFC  32E8               	rrcf	wreg,f,c
   680   00FEFE  0B07               	andlw	7
   681   00FF00  6E25               	movwf	??_gpio_pin_directoin_initialize^0,c
   682   00FF02  0E01               	movlw	1
   683   00FF04  6E26               	movwf	(??_gpio_pin_directoin_initialize+1)^0,c
   684   00FF06  2A25               	incf	??_gpio_pin_directoin_initialize^0,f,c
   685   00FF08  EF88  F07F         	goto	u284
   686   00FF0C                     u285:
   687   00FF0C  90D8               	bcf	status,0,c
   688   00FF0E  3626               	rlcf	(??_gpio_pin_directoin_initialize+1)^0,f,c
   689   00FF10                     u284:
   690   00FF10  2E25               	decfsz	??_gpio_pin_directoin_initialize^0,f,c
   691   00FF12  EF86  F07F         	goto	u285
   692   00FF16  5026               	movf	(??_gpio_pin_directoin_initialize+1)^0,w,c
   693   00FF18  0AFF               	xorlw	255
   694   00FF1A  6E27               	movwf	(??_gpio_pin_directoin_initialize+2)^0,c
   695   00FF1C  C023  FFD9         	movff	gpio_pin_directoin_initialize@pin,fsr2l
   696   00FF20  C024  FFDA         	movff	gpio_pin_directoin_initialize@pin+1,fsr2h
   697   00FF24  50DF               	movf	223,w,c
   698   00FF26  0B07               	andlw	7
   699   00FF28  6E28               	movwf	(??_gpio_pin_directoin_initialize+3)^0,c
   700   00FF2A  5028               	movf	(??_gpio_pin_directoin_initialize+3)^0,w,c
   701   00FF2C  0D02               	mullw	2
   702   00FF2E  0E15               	movlw	low _Tris_Register
   703   00FF30  24F3               	addwf	243,w,c
   704   00FF32  6ED9               	movwf	fsr2l,c
   705   00FF34  0E00               	movlw	high _Tris_Register
   706   00FF36  20F4               	addwfc	prodh,w,c
   707   00FF38  6EDA               	movwf	fsr2h,c
   708   00FF3A  CFDE F029          	movff	postinc2,??_gpio_pin_directoin_initialize+4
   709   00FF3E  CFDD F02A          	movff	postdec2,??_gpio_pin_directoin_initialize+5
   710   00FF42  C029  FFD9         	movff	??_gpio_pin_directoin_initialize+4,fsr2l
   711   00FF46  C02A  FFDA         	movff	??_gpio_pin_directoin_initialize+5,fsr2h
   712   00FF4A  5027               	movf	(??_gpio_pin_directoin_initialize+2)^0,w,c
   713   00FF4C  16DF               	andwf	indf2,f,c
   714   00FF4E                     l1112:
   715                           
   716                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 44:             ret = (Std_ReturnType)0X01;
   717   00FF4E  0E01               	movlw	1
   718   00FF50  6E2B               	movwf	gpio_pin_directoin_initialize@ret^0,c
   719                           
   720                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 45:             break;
   721   00FF52  EFFE  F07F         	goto	l1122
   722   00FF56                     l1114:
   723                           
   724                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 48:             (*Tris_Register[pin->port] |= ((uint8)1<<pi
      +                          n->pin));
   725   00FF56  C023  FFD9         	movff	gpio_pin_directoin_initialize@pin,fsr2l
   726   00FF5A  C024  FFDA         	movff	gpio_pin_directoin_initialize@pin+1,fsr2h
   727   00FF5E  30DF               	rrcf	223,w,c
   728   00FF60  32E8               	rrcf	wreg,f,c
   729   00FF62  32E8               	rrcf	wreg,f,c
   730   00FF64  0B07               	andlw	7
   731   00FF66  6E25               	movwf	??_gpio_pin_directoin_initialize^0,c
   732   00FF68  0E01               	movlw	1
   733   00FF6A  6E26               	movwf	(??_gpio_pin_directoin_initialize+1)^0,c
   734   00FF6C  2A25               	incf	??_gpio_pin_directoin_initialize^0,f,c
   735   00FF6E  EFBB  F07F         	goto	u294
   736   00FF72                     u295:
   737   00FF72  90D8               	bcf	status,0,c
   738   00FF74  3626               	rlcf	(??_gpio_pin_directoin_initialize+1)^0,f,c
   739   00FF76                     u294:
   740   00FF76  2E25               	decfsz	??_gpio_pin_directoin_initialize^0,f,c
   741   00FF78  EFB9  F07F         	goto	u295
   742   00FF7C  C023  FFD9         	movff	gpio_pin_directoin_initialize@pin,fsr2l
   743   00FF80  C024  FFDA         	movff	gpio_pin_directoin_initialize@pin+1,fsr2h
   744   00FF84  50DF               	movf	223,w,c
   745   00FF86  0B07               	andlw	7
   746   00FF88  6E27               	movwf	(??_gpio_pin_directoin_initialize+2)^0,c
   747   00FF8A  5027               	movf	(??_gpio_pin_directoin_initialize+2)^0,w,c
   748   00FF8C  0D02               	mullw	2
   749   00FF8E  0E15               	movlw	low _Tris_Register
   750   00FF90  24F3               	addwf	243,w,c
   751   00FF92  6ED9               	movwf	fsr2l,c
   752   00FF94  0E00               	movlw	high _Tris_Register
   753   00FF96  20F4               	addwfc	prodh,w,c
   754   00FF98  6EDA               	movwf	fsr2h,c
   755   00FF9A  CFDE F028          	movff	postinc2,??_gpio_pin_directoin_initialize+3
   756   00FF9E  CFDD F029          	movff	postdec2,??_gpio_pin_directoin_initialize+4
   757   00FFA2  C028  FFD9         	movff	??_gpio_pin_directoin_initialize+3,fsr2l
   758   00FFA6  C029  FFDA         	movff	??_gpio_pin_directoin_initialize+4,fsr2h
   759   00FFAA  5026               	movf	(??_gpio_pin_directoin_initialize+1)^0,w,c
   760   00FFAC  12DF               	iorwf	indf2,f,c
   761   00FFAE  EFA7  F07F         	goto	l1112
   762   00FFB2                     l1118:
   763   00FFB2  0E00               	movlw	0
   764   00FFB4  6E2B               	movwf	gpio_pin_directoin_initialize@ret^0,c
   765                           
   766                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 53:     }
   767   00FFB6  EFFE  F07F         	goto	l1122
   768   00FFBA                     l1120:
   769   00FFBA  C023  FFD9         	movff	gpio_pin_directoin_initialize@pin,fsr2l
   770   00FFBE  C024  FFDA         	movff	gpio_pin_directoin_initialize@pin+1,fsr2h
   771   00FFC2  BEDF               	btfsc	indf2,7,c
   772   00FFC4  EFE6  F07F         	goto	u301
   773   00FFC8  EFE9  F07F         	goto	u300
   774   00FFCC                     u301:
   775   00FFCC  0E01               	movlw	1
   776   00FFCE  EFEA  F07F         	goto	u310
   777   00FFD2                     u300:
   778   00FFD2  0E00               	movlw	0
   779   00FFD4                     u310:
   780   00FFD4  6E25               	movwf	??_gpio_pin_directoin_initialize^0,c
   781   00FFD6  6A26               	clrf	(??_gpio_pin_directoin_initialize+1)^0,c
   782                           
   783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   784                           ; Switch size 1, requested type "simple"
   785                           ; Number of cases is 1, Range of values is 0 to 0
   786                           ; switch strategies available:
   787                           ; Name         Instructions Cycles
   788                           ; simple_byte            4     3 (average)
   789                           ;	Chosen strategy is simple_byte
   790   00FFD8  5026               	movf	(??_gpio_pin_directoin_initialize+1)^0,w,c
   791   00FFDA  0A00               	xorlw	0	; case 0
   792   00FFDC  B4D8               	btfsc	status,2,c
   793   00FFDE  EFF3  F07F         	goto	l1272
   794   00FFE2  EFD9  F07F         	goto	l1118
   795   00FFE6                     l1272:
   796                           
   797                           ; Switch size 1, requested type "simple"
   798                           ; Number of cases is 2, Range of values is 0 to 1
   799                           ; switch strategies available:
   800                           ; Name         Instructions Cycles
   801                           ; simple_byte            7     4 (average)
   802                           ;	Chosen strategy is simple_byte
   803   00FFE6  5025               	movf	??_gpio_pin_directoin_initialize^0,w,c
   804   00FFE8  0A00               	xorlw	0	; case 0
   805   00FFEA  B4D8               	btfsc	status,2,c
   806   00FFEC  EF78  F07F         	goto	l1110
   807   00FFF0  0A01               	xorlw	1	; case 1
   808   00FFF2  B4D8               	btfsc	status,2,c
   809   00FFF4  EFAB  F07F         	goto	l1114
   810   00FFF8  EFD9  F07F         	goto	l1118
   811   00FFFC                     l1122:
   812                           
   813                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 54:     return ret;
   814   00FFFC  502B               	movf	gpio_pin_directoin_initialize@ret^0,w,c
   815   00FFFE  0012               	return		;funcret
   816   010000                     __end_of_gpio_pin_directoin_initialize:
   817                           	callstack 0
   818                           
   819 ;; *************** function _DC_Motor_Stop *****************
   820 ;; Defined at:
   821 ;;		line 67 in file "ECU_Layer/Motor/Motor_Driver.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
   824 ;;		 -> dc_motor2(2), dc_motor1(2), 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  ret             1   12[COMRAM] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      unsigned char 
   829 ;; Registers used:
   830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;Total ram usage:        3 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; Hardware stack levels required when called: 1
   843 ;; This function calls:
   844 ;;		_gpio_pin_write_logic
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text5
   851   00FC94                     __ptext5:
   852                           	callstack 0
   853   00FC94                     _DC_Motor_Stop:
   854                           	callstack 29
   855   00FC94                     
   856                           ;ECU_Layer/Motor/Motor_Driver.c: 70:     if(((void*)0) == _dc_motor)
   857   00FC94  502D               	movf	DC_Motor_Stop@_dc_motor^0,w,c
   858   00FC96  102E               	iorwf	(DC_Motor_Stop@_dc_motor+1)^0,w,c
   859   00FC98  A4D8               	btfss	status,2,c
   860   00FC9A  EF51  F07E         	goto	u391
   861   00FC9E  EF53  F07E         	goto	u390
   862   00FCA2                     u391:
   863   00FCA2  EF57  F07E         	goto	l1222
   864   00FCA6                     u390:
   865   00FCA6                     
   866                           ;ECU_Layer/Motor/Motor_Driver.c: 71:     {;ECU_Layer/Motor/Motor_Driver.c: 72:         r
      +                          et = (Std_ReturnType)0X00;
   867   00FCA6  0E00               	movlw	0
   868   00FCA8  6E2F               	movwf	DC_Motor_Stop@ret^0,c
   869                           
   870                           ;ECU_Layer/Motor/Motor_Driver.c: 73:     }
   871   00FCAA  EF6B  F07E         	goto	l1226
   872   00FCAE                     l1222:
   873                           
   874                           ;ECU_Layer/Motor/Motor_Driver.c: 75:     {;ECU_Layer/Motor/Motor_Driver.c: 76:         g
      +                          pio_pin_write_logic(&(_dc_motor->dc_motor_pin[0X00U]),GPIO_LOW);
   875   00FCAE  C02D  F023         	movff	DC_Motor_Stop@_dc_motor,gpio_pin_write_logic@pin
   876   00FCB2  C02E  F024         	movff	DC_Motor_Stop@_dc_motor+1,gpio_pin_write_logic@pin+1
   877   00FCB6  0E00               	movlw	0
   878   00FCB8  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   879   00FCBA  ECE6  F07E         	call	_gpio_pin_write_logic	;wreg free
   880                           
   881                           ;ECU_Layer/Motor/Motor_Driver.c: 77:         gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0X01U]),GPIO_LOW);
   882   00FCBE  0E01               	movlw	1
   883   00FCC0  242D               	addwf	DC_Motor_Stop@_dc_motor^0,w,c
   884   00FCC2  6E23               	movwf	gpio_pin_write_logic@pin^0,c
   885   00FCC4  0E00               	movlw	0
   886   00FCC6  202E               	addwfc	(DC_Motor_Stop@_dc_motor+1)^0,w,c
   887   00FCC8  6E24               	movwf	(gpio_pin_write_logic@pin+1)^0,c
   888   00FCCA  0E00               	movlw	0
   889   00FCCC  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   890   00FCCE  ECE6  F07E         	call	_gpio_pin_write_logic	;wreg free
   891   00FCD2                     
   892                           ;ECU_Layer/Motor/Motor_Driver.c: 78:         ret = (Std_ReturnType)0X01;
   893   00FCD2  0E01               	movlw	1
   894   00FCD4  6E2F               	movwf	DC_Motor_Stop@ret^0,c
   895   00FCD6                     l1226:
   896                           
   897                           ;ECU_Layer/Motor/Motor_Driver.c: 80:     return ret;
   898   00FCD6  502F               	movf	DC_Motor_Stop@ret^0,w,c
   899   00FCD8  0012               	return		;funcret
   900   00FCDA                     __end_of_DC_Motor_Stop:
   901                           	callstack 0
   902                           
   903 ;; *************** function _DC_Motor_Move_Right *****************
   904 ;; Defined at:
   905 ;;		line 34 in file "ECU_Layer/Motor/Motor_Driver.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
   908 ;;		 -> dc_motor2(2), dc_motor1(2), 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  ret             1   12[COMRAM] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      unsigned char 
   913 ;; Registers used:
   914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;Total ram usage:        3 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 1
   927 ;; This function calls:
   928 ;;		_gpio_pin_write_logic
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text6
   935   00FC4E                     __ptext6:
   936                           	callstack 0
   937   00FC4E                     _DC_Motor_Move_Right:
   938                           	callstack 29
   939   00FC4E                     
   940                           ;ECU_Layer/Motor/Motor_Driver.c: 37:     if(((void*)0) == _dc_motor)
   941   00FC4E  502D               	movf	DC_Motor_Move_Right@_dc_motor^0,w,c
   942   00FC50  102E               	iorwf	(DC_Motor_Move_Right@_dc_motor+1)^0,w,c
   943   00FC52  A4D8               	btfss	status,2,c
   944   00FC54  EF2E  F07E         	goto	u381
   945   00FC58  EF30  F07E         	goto	u380
   946   00FC5C                     u381:
   947   00FC5C  EF34  F07E         	goto	l1208
   948   00FC60                     u380:
   949   00FC60                     
   950                           ;ECU_Layer/Motor/Motor_Driver.c: 38:     {;ECU_Layer/Motor/Motor_Driver.c: 39:         r
      +                          et = (Std_ReturnType)0X00;
   951   00FC60  0E00               	movlw	0
   952   00FC62  6E2F               	movwf	DC_Motor_Move_Right@ret^0,c
   953                           
   954                           ;ECU_Layer/Motor/Motor_Driver.c: 40:     }
   955   00FC64  EF48  F07E         	goto	l1212
   956   00FC68                     l1208:
   957                           
   958                           ;ECU_Layer/Motor/Motor_Driver.c: 42:     {;ECU_Layer/Motor/Motor_Driver.c: 45:         g
      +                          pio_pin_write_logic(&(_dc_motor->dc_motor_pin[0X00U]),GPIO_HIGH);
   959   00FC68  C02D  F023         	movff	DC_Motor_Move_Right@_dc_motor,gpio_pin_write_logic@pin
   960   00FC6C  C02E  F024         	movff	DC_Motor_Move_Right@_dc_motor+1,gpio_pin_write_logic@pin+1
   961   00FC70  0E01               	movlw	1
   962   00FC72  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   963   00FC74  ECE6  F07E         	call	_gpio_pin_write_logic	;wreg free
   964                           
   965                           ;ECU_Layer/Motor/Motor_Driver.c: 46:         gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0X01U]),GPIO_LOW);
   966   00FC78  0E01               	movlw	1
   967   00FC7A  242D               	addwf	DC_Motor_Move_Right@_dc_motor^0,w,c
   968   00FC7C  6E23               	movwf	gpio_pin_write_logic@pin^0,c
   969   00FC7E  0E00               	movlw	0
   970   00FC80  202E               	addwfc	(DC_Motor_Move_Right@_dc_motor+1)^0,w,c
   971   00FC82  6E24               	movwf	(gpio_pin_write_logic@pin+1)^0,c
   972   00FC84  0E00               	movlw	0
   973   00FC86  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   974   00FC88  ECE6  F07E         	call	_gpio_pin_write_logic	;wreg free
   975   00FC8C                     
   976                           ;ECU_Layer/Motor/Motor_Driver.c: 47:         ret = (Std_ReturnType)0X01;
   977   00FC8C  0E01               	movlw	1
   978   00FC8E  6E2F               	movwf	DC_Motor_Move_Right@ret^0,c
   979   00FC90                     l1212:
   980                           
   981                           ;ECU_Layer/Motor/Motor_Driver.c: 49:     return ret;
   982   00FC90  502F               	movf	DC_Motor_Move_Right@ret^0,w,c
   983   00FC92  0012               	return		;funcret
   984   00FC94                     __end_of_DC_Motor_Move_Right:
   985                           	callstack 0
   986                           
   987 ;; *************** function _DC_Motor_Move_Left *****************
   988 ;; Defined at:
   989 ;;		line 51 in file "ECU_Layer/Motor/Motor_Driver.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
   992 ;;		 -> dc_motor2(2), dc_motor1(2), 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  ret             1   12[COMRAM] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      unsigned char 
   997 ;; Registers used:
   998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;Total ram usage:        3 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 1
  1011 ;; This function calls:
  1012 ;;		_gpio_pin_write_logic
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text7
  1019   00FC08                     __ptext7:
  1020                           	callstack 0
  1021   00FC08                     _DC_Motor_Move_Left:
  1022                           	callstack 29
  1023   00FC08                     
  1024                           ;ECU_Layer/Motor/Motor_Driver.c: 54:     if(((void*)0) == _dc_motor)
  1025   00FC08  502D               	movf	DC_Motor_Move_Left@_dc_motor^0,w,c
  1026   00FC0A  102E               	iorwf	(DC_Motor_Move_Left@_dc_motor+1)^0,w,c
  1027   00FC0C  A4D8               	btfss	status,2,c
  1028   00FC0E  EF0B  F07E         	goto	u371
  1029   00FC12  EF0D  F07E         	goto	u370
  1030   00FC16                     u371:
  1031   00FC16  EF11  F07E         	goto	l1194
  1032   00FC1A                     u370:
  1033   00FC1A                     
  1034                           ;ECU_Layer/Motor/Motor_Driver.c: 55:     {;ECU_Layer/Motor/Motor_Driver.c: 56:         r
      +                          et = (Std_ReturnType)0X00;
  1035   00FC1A  0E00               	movlw	0
  1036   00FC1C  6E2F               	movwf	DC_Motor_Move_Left@ret^0,c
  1037                           
  1038                           ;ECU_Layer/Motor/Motor_Driver.c: 57:     }
  1039   00FC1E  EF25  F07E         	goto	l1198
  1040   00FC22                     l1194:
  1041                           
  1042                           ;ECU_Layer/Motor/Motor_Driver.c: 59:     {;ECU_Layer/Motor/Motor_Driver.c: 61:         g
      +                          pio_pin_write_logic(&(_dc_motor->dc_motor_pin[0X00U]),GPIO_LOW);
  1043   00FC22  C02D  F023         	movff	DC_Motor_Move_Left@_dc_motor,gpio_pin_write_logic@pin
  1044   00FC26  C02E  F024         	movff	DC_Motor_Move_Left@_dc_motor+1,gpio_pin_write_logic@pin+1
  1045   00FC2A  0E00               	movlw	0
  1046   00FC2C  6E25               	movwf	gpio_pin_write_logic@logic^0,c
  1047   00FC2E  ECE6  F07E         	call	_gpio_pin_write_logic	;wreg free
  1048                           
  1049                           ;ECU_Layer/Motor/Motor_Driver.c: 62:         gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0X01U]),GPIO_HIGH);
  1050   00FC32  0E01               	movlw	1
  1051   00FC34  242D               	addwf	DC_Motor_Move_Left@_dc_motor^0,w,c
  1052   00FC36  6E23               	movwf	gpio_pin_write_logic@pin^0,c
  1053   00FC38  0E00               	movlw	0
  1054   00FC3A  202E               	addwfc	(DC_Motor_Move_Left@_dc_motor+1)^0,w,c
  1055   00FC3C  6E24               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  1056   00FC3E  0E01               	movlw	1
  1057   00FC40  6E25               	movwf	gpio_pin_write_logic@logic^0,c
  1058   00FC42  ECE6  F07E         	call	_gpio_pin_write_logic	;wreg free
  1059   00FC46                     
  1060                           ;ECU_Layer/Motor/Motor_Driver.c: 63:         ret = (Std_ReturnType)0X01;
  1061   00FC46  0E01               	movlw	1
  1062   00FC48  6E2F               	movwf	DC_Motor_Move_Left@ret^0,c
  1063   00FC4A                     l1198:
  1064                           
  1065                           ;ECU_Layer/Motor/Motor_Driver.c: 65:     return ret;
  1066   00FC4A  502F               	movf	DC_Motor_Move_Left@ret^0,w,c
  1067   00FC4C  0012               	return		;funcret
  1068   00FC4E                     __end_of_DC_Motor_Move_Left:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _gpio_pin_write_logic *****************
  1072 ;; Defined at:
  1073 ;;		line 70 in file "MCAL_Layer/GPIO/HAL_GPIO.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  pin             2    0[COMRAM] PTR const struct .
  1076 ;;		 -> dc_motor2.dc_motor_pin(2), dc_motor2(2), dc_motor1.dc_motor_pin(2), dc_motor1(2), 
  1077 ;;  logic           1    2[COMRAM] enum E2805
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  ret             1    9[COMRAM] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      unsigned char 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1089 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;Total ram usage:       10 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_gpio_pin_initialize
  1099 ;;		_DC_Motor_Move_Right
  1100 ;;		_DC_Motor_Move_Left
  1101 ;;		_DC_Motor_Stop
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text8
  1106   00FDCC                     __ptext8:
  1107                           	callstack 0
  1108   00FDCC                     _gpio_pin_write_logic:
  1109                           	callstack 27
  1110   00FDCC                     
  1111                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 73:     if(((void*)0) == pin)
  1112   00FDCC  5023               	movf	gpio_pin_write_logic@pin^0,w,c
  1113   00FDCE  1024               	iorwf	(gpio_pin_write_logic@pin+1)^0,w,c
  1114   00FDD0  A4D8               	btfss	status,2,c
  1115   00FDD2  EFED  F07E         	goto	u321
  1116   00FDD6  EFEF  F07E         	goto	u320
  1117   00FDDA                     u321:
  1118   00FDDA  EF56  F07F         	goto	l1146
  1119   00FDDE                     u320:
  1120   00FDDE  EF56  F07F         	goto	l1146
  1121   00FDE2                     l1136:
  1122                           
  1123                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 80:             (*Lat_Register[pin->port] &= ~((uint8)1<<pi
      +                          n->pin));
  1124   00FDE2  C023  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  1125   00FDE6  C024  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  1126   00FDEA  30DF               	rrcf	223,w,c
  1127   00FDEC  32E8               	rrcf	wreg,f,c
  1128   00FDEE  32E8               	rrcf	wreg,f,c
  1129   00FDF0  0B07               	andlw	7
  1130   00FDF2  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1131   00FDF4  0E01               	movlw	1
  1132   00FDF6  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1133   00FDF8  2A26               	incf	??_gpio_pin_write_logic^0,f,c
  1134   00FDFA  EF01  F07F         	goto	u334
  1135   00FDFE                     u335:
  1136   00FDFE  90D8               	bcf	status,0,c
  1137   00FE00  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1138   00FE02                     u334:
  1139   00FE02  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
  1140   00FE04  EFFF  F07E         	goto	u335
  1141   00FE08  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1142   00FE0A  0AFF               	xorlw	255
  1143   00FE0C  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1144   00FE0E  C023  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  1145   00FE12  C024  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  1146   00FE16  50DF               	movf	223,w,c
  1147   00FE18  0B07               	andlw	7
  1148   00FE1A  6E29               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1149   00FE1C  5029               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1150   00FE1E  0D02               	mullw	2
  1151   00FE20  0E0B               	movlw	low _Lat_Register
  1152   00FE22  24F3               	addwf	243,w,c
  1153   00FE24  6ED9               	movwf	fsr2l,c
  1154   00FE26  0E00               	movlw	high _Lat_Register
  1155   00FE28  20F4               	addwfc	prodh,w,c
  1156   00FE2A  6EDA               	movwf	fsr2h,c
  1157   00FE2C  CFDE F02A          	movff	postinc2,??_gpio_pin_write_logic+4
  1158   00FE30  CFDD F02B          	movff	postdec2,??_gpio_pin_write_logic+5
  1159   00FE34  C02A  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1160   00FE38  C02B  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1161   00FE3C  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1162   00FE3E  16DF               	andwf	indf2,f,c
  1163   00FE40                     l1138:
  1164                           
  1165                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 81:             ret = (Std_ReturnType)0X01;
  1166   00FE40  0E01               	movlw	1
  1167   00FE42  6E2C               	movwf	gpio_pin_write_logic@ret^0,c
  1168                           
  1169                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 82:             break;
  1170   00FE44  EF6B  F07F         	goto	l1148
  1171   00FE48                     l1140:
  1172                           
  1173                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 84:             (*Lat_Register[pin->port] |= ((uint8)1<<pin
      +                          ->pin));
  1174   00FE48  C023  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  1175   00FE4C  C024  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  1176   00FE50  30DF               	rrcf	223,w,c
  1177   00FE52  32E8               	rrcf	wreg,f,c
  1178   00FE54  32E8               	rrcf	wreg,f,c
  1179   00FE56  0B07               	andlw	7
  1180   00FE58  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1181   00FE5A  0E01               	movlw	1
  1182   00FE5C  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1183   00FE5E  2A26               	incf	??_gpio_pin_write_logic^0,f,c
  1184   00FE60  EF34  F07F         	goto	u344
  1185   00FE64                     u345:
  1186   00FE64  90D8               	bcf	status,0,c
  1187   00FE66  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1188   00FE68                     u344:
  1189   00FE68  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
  1190   00FE6A  EF32  F07F         	goto	u345
  1191   00FE6E  C023  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  1192   00FE72  C024  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  1193   00FE76  50DF               	movf	223,w,c
  1194   00FE78  0B07               	andlw	7
  1195   00FE7A  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1196   00FE7C  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1197   00FE7E  0D02               	mullw	2
  1198   00FE80  0E0B               	movlw	low _Lat_Register
  1199   00FE82  24F3               	addwf	243,w,c
  1200   00FE84  6ED9               	movwf	fsr2l,c
  1201   00FE86  0E00               	movlw	high _Lat_Register
  1202   00FE88  20F4               	addwfc	prodh,w,c
  1203   00FE8A  6EDA               	movwf	fsr2h,c
  1204   00FE8C  CFDE F029          	movff	postinc2,??_gpio_pin_write_logic+3
  1205   00FE90  CFDD F02A          	movff	postdec2,??_gpio_pin_write_logic+4
  1206   00FE94  C029  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1207   00FE98  C02A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1208   00FE9C  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1209   00FE9E  12DF               	iorwf	indf2,f,c
  1210   00FEA0  EF20  F07F         	goto	l1138
  1211   00FEA4                     l1144:
  1212   00FEA4  0E00               	movlw	0
  1213   00FEA6  6E2C               	movwf	gpio_pin_write_logic@ret^0,c
  1214                           
  1215                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 88:     }
  1216   00FEA8  EF6B  F07F         	goto	l1148
  1217   00FEAC                     l1146:
  1218   00FEAC  5025               	movf	gpio_pin_write_logic@logic^0,w,c
  1219   00FEAE  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1220   00FEB0  6A27               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1221                           
  1222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1223                           ; Switch size 1, requested type "simple"
  1224                           ; Number of cases is 1, Range of values is 0 to 0
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte            4     3 (average)
  1228                           ;	Chosen strategy is simple_byte
  1229   00FEB2  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1230   00FEB4  0A00               	xorlw	0	; case 0
  1231   00FEB6  B4D8               	btfsc	status,2,c
  1232   00FEB8  EF60  F07F         	goto	l1274
  1233   00FEBC  EF52  F07F         	goto	l1144
  1234   00FEC0                     l1274:
  1235                           
  1236                           ; Switch size 1, requested type "simple"
  1237                           ; Number of cases is 2, Range of values is 0 to 1
  1238                           ; switch strategies available:
  1239                           ; Name         Instructions Cycles
  1240                           ; simple_byte            7     4 (average)
  1241                           ;	Chosen strategy is simple_byte
  1242   00FEC0  5026               	movf	??_gpio_pin_write_logic^0,w,c
  1243   00FEC2  0A00               	xorlw	0	; case 0
  1244   00FEC4  B4D8               	btfsc	status,2,c
  1245   00FEC6  EFF1  F07E         	goto	l1136
  1246   00FECA  0A01               	xorlw	1	; case 1
  1247   00FECC  B4D8               	btfsc	status,2,c
  1248   00FECE  EF24  F07F         	goto	l1140
  1249   00FED2  EF52  F07F         	goto	l1144
  1250   00FED6                     l1148:
  1251                           
  1252                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 89:     return ret;
  1253   00FED6  502C               	movf	gpio_pin_write_logic@ret^0,w,c
  1254   00FED8  0012               	return		;funcret
  1255   00FEDA                     __end_of_gpio_pin_write_logic:
  1256                           	callstack 0
  1257   000000                     
  1258                           	psect	rparam
  1259   000000                     
  1260                           	psect	idloc
  1261                           
  1262                           ;Config register IDLOC0 @ 0x200000
  1263                           ;	unspecified, using default values
  1264   200000                     	org	2097152
  1265   200000  FF                 	db	255
  1266                           
  1267                           ;Config register IDLOC1 @ 0x200001
  1268                           ;	unspecified, using default values
  1269   200001                     	org	2097153
  1270   200001  FF                 	db	255
  1271                           
  1272                           ;Config register IDLOC2 @ 0x200002
  1273                           ;	unspecified, using default values
  1274   200002                     	org	2097154
  1275   200002  FF                 	db	255
  1276                           
  1277                           ;Config register IDLOC3 @ 0x200003
  1278                           ;	unspecified, using default values
  1279   200003                     	org	2097155
  1280   200003  FF                 	db	255
  1281                           
  1282                           ;Config register IDLOC4 @ 0x200004
  1283                           ;	unspecified, using default values
  1284   200004                     	org	2097156
  1285   200004  FF                 	db	255
  1286                           
  1287                           ;Config register IDLOC5 @ 0x200005
  1288                           ;	unspecified, using default values
  1289   200005                     	org	2097157
  1290   200005  FF                 	db	255
  1291                           
  1292                           ;Config register IDLOC6 @ 0x200006
  1293                           ;	unspecified, using default values
  1294   200006                     	org	2097158
  1295   200006  FF                 	db	255
  1296                           
  1297                           ;Config register IDLOC7 @ 0x200007
  1298                           ;	unspecified, using default values
  1299   200007                     	org	2097159
  1300   200007  FF                 	db	255
  1301                           
  1302                           	psect	config
  1303                           
  1304                           ; Padding undefined space
  1305   300000                     	org	3145728
  1306   300000  FF                 	db	255
  1307                           
  1308                           ;Config register CONFIG1H @ 0x300001
  1309                           ;	unspecified, using default values
  1310                           ;	Oscillator Selection bits
  1311                           ;	OSC = 0x7, unprogrammed default
  1312                           ;	Fail-Safe Clock Monitor Enable bit
  1313                           ;	FCMEN = 0x0, unprogrammed default
  1314                           ;	Internal/External Oscillator Switchover bit
  1315                           ;	IESO = 0x0, unprogrammed default
  1316   300001                     	org	3145729
  1317   300001  07                 	db	7
  1318                           
  1319                           ;Config register CONFIG2L @ 0x300002
  1320                           ;	unspecified, using default values
  1321                           ;	Power-up Timer Enable bit
  1322                           ;	PWRT = 0x1, unprogrammed default
  1323                           ;	Brown-out Reset Enable bits
  1324                           ;	BOREN = 0x3, unprogrammed default
  1325                           ;	Brown Out Reset Voltage bits
  1326                           ;	BORV = 0x3, unprogrammed default
  1327   300002                     	org	3145730
  1328   300002  1F                 	db	31
  1329                           
  1330                           ;Config register CONFIG2H @ 0x300003
  1331                           ;	unspecified, using default values
  1332                           ;	Watchdog Timer Enable bit
  1333                           ;	WDT = 0x1, unprogrammed default
  1334                           ;	Watchdog Timer Postscale Select bits
  1335                           ;	WDTPS = 0xF, unprogrammed default
  1336   300003                     	org	3145731
  1337   300003  1F                 	db	31
  1338                           
  1339                           ; Padding undefined space
  1340   300004                     	org	3145732
  1341   300004  FF                 	db	255
  1342                           
  1343                           ;Config register CONFIG3H @ 0x300005
  1344                           ;	unspecified, using default values
  1345                           ;	CCP2 MUX bit
  1346                           ;	CCP2MX = 0x1, unprogrammed default
  1347                           ;	PORTB A/D Enable bit
  1348                           ;	PBADEN = 0x1, unprogrammed default
  1349                           ;	Low-Power Timer1 Oscillator Enable bit
  1350                           ;	LPT1OSC = 0x0, unprogrammed default
  1351                           ;	MCLR Pin Enable bit
  1352                           ;	MCLRE = 0x1, unprogrammed default
  1353   300005                     	org	3145733
  1354   300005  83                 	db	131
  1355                           
  1356                           ;Config register CONFIG4L @ 0x300006
  1357                           ;	unspecified, using default values
  1358                           ;	Stack Full/Underflow Reset Enable bit
  1359                           ;	STVREN = 0x1, unprogrammed default
  1360                           ;	Single-Supply ICSP Enable bit
  1361                           ;	LVP = 0x1, unprogrammed default
  1362                           ;	Extended Instruction Set Enable bit
  1363                           ;	XINST = 0x0, unprogrammed default
  1364                           ;	Background Debugger Enable bit
  1365                           ;	DEBUG = 0x1, unprogrammed default
  1366   300006                     	org	3145734
  1367   300006  85                 	db	133
  1368                           
  1369                           ; Padding undefined space
  1370   300007                     	org	3145735
  1371   300007  FF                 	db	255
  1372                           
  1373                           ;Config register CONFIG5L @ 0x300008
  1374                           ;	unspecified, using default values
  1375                           ;	Code Protection bit
  1376                           ;	CP0 = 0x1, unprogrammed default
  1377                           ;	Code Protection bit
  1378                           ;	CP1 = 0x1, unprogrammed default
  1379                           ;	Code Protection bit
  1380                           ;	CP2 = 0x1, unprogrammed default
  1381                           ;	Code Protection bit
  1382                           ;	CP3 = 0x1, unprogrammed default
  1383   300008                     	org	3145736
  1384   300008  0F                 	db	15
  1385                           
  1386                           ;Config register CONFIG5H @ 0x300009
  1387                           ;	unspecified, using default values
  1388                           ;	Boot Block Code Protection bit
  1389                           ;	CPB = 0x1, unprogrammed default
  1390                           ;	Data EEPROM Code Protection bit
  1391                           ;	CPD = 0x1, unprogrammed default
  1392   300009                     	org	3145737
  1393   300009  C0                 	db	192
  1394                           
  1395                           ;Config register CONFIG6L @ 0x30000A
  1396                           ;	unspecified, using default values
  1397                           ;	Write Protection bit
  1398                           ;	WRT0 = 0x1, unprogrammed default
  1399                           ;	Write Protection bit
  1400                           ;	WRT1 = 0x1, unprogrammed default
  1401                           ;	Write Protection bit
  1402                           ;	WRT2 = 0x1, unprogrammed default
  1403                           ;	Write Protection bit
  1404                           ;	WRT3 = 0x1, unprogrammed default
  1405   30000A                     	org	3145738
  1406   30000A  0F                 	db	15
  1407                           
  1408                           ;Config register CONFIG6H @ 0x30000B
  1409                           ;	unspecified, using default values
  1410                           ;	Configuration Register Write Protection bit
  1411                           ;	WRTC = 0x1, unprogrammed default
  1412                           ;	Boot Block Write Protection bit
  1413                           ;	WRTB = 0x1, unprogrammed default
  1414                           ;	Data EEPROM Write Protection bit
  1415                           ;	WRTD = 0x1, unprogrammed default
  1416   30000B                     	org	3145739
  1417   30000B  E0                 	db	224
  1418                           
  1419                           ;Config register CONFIG7L @ 0x30000C
  1420                           ;	unspecified, using default values
  1421                           ;	Table Read Protection bit
  1422                           ;	EBTR0 = 0x1, unprogrammed default
  1423                           ;	Table Read Protection bit
  1424                           ;	EBTR1 = 0x1, unprogrammed default
  1425                           ;	Table Read Protection bit
  1426                           ;	EBTR2 = 0x1, unprogrammed default
  1427                           ;	Table Read Protection bit
  1428                           ;	EBTR3 = 0x1, unprogrammed default
  1429   30000C                     	org	3145740
  1430   30000C  0F                 	db	15
  1431                           
  1432                           ;Config register CONFIG7H @ 0x30000D
  1433                           ;	unspecified, using default values
  1434                           ;	Boot Block Table Read Protection bit
  1435                           ;	EBTRB = 0x1, unprogrammed default
  1436   30000D                     	org	3145741
  1437   30000D  40                 	db	64
  1438                           tosu	equ	0xFFF
  1439                           tosh	equ	0xFFE
  1440                           tosl	equ	0xFFD
  1441                           stkptr	equ	0xFFC
  1442                           pclatu	equ	0xFFB
  1443                           pclath	equ	0xFFA
  1444                           pcl	equ	0xFF9
  1445                           tblptru	equ	0xFF8
  1446                           tblptrh	equ	0xFF7
  1447                           tblptrl	equ	0xFF6
  1448                           tablat	equ	0xFF5
  1449                           prodh	equ	0xFF4
  1450                           prodl	equ	0xFF3
  1451                           indf0	equ	0xFEF
  1452                           postinc0	equ	0xFEE
  1453                           postdec0	equ	0xFED
  1454                           preinc0	equ	0xFEC
  1455                           plusw0	equ	0xFEB
  1456                           fsr0h	equ	0xFEA
  1457                           fsr0l	equ	0xFE9
  1458                           wreg	equ	0xFE8
  1459                           indf1	equ	0xFE7
  1460                           postinc1	equ	0xFE6
  1461                           postdec1	equ	0xFE5
  1462                           preinc1	equ	0xFE4
  1463                           plusw1	equ	0xFE3
  1464                           fsr1h	equ	0xFE2
  1465                           fsr1l	equ	0xFE1
  1466                           bsr	equ	0xFE0
  1467                           indf2	equ	0xFDF
  1468                           postinc2	equ	0xFDE
  1469                           postdec2	equ	0xFDD
  1470                           preinc2	equ	0xFDC
  1471                           plusw2	equ	0xFDB
  1472                           fsr2h	equ	0xFDA
  1473                           fsr2l	equ	0xFD9
  1474                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      53
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    DC_Motor_Stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2(COMRAM[2]), dc_motor1(COMRAM[2]), 

    DC_Motor_Move_Left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2(COMRAM[2]), dc_motor1(COMRAM[2]), 

    DC_Motor_Move_Right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2(COMRAM[2]), dc_motor1(COMRAM[2]), 

    DC_Motor_Initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2(COMRAM[2]), dc_motor1(COMRAM[2]), 

    gpio_pin_write_logic@pin	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2.dc_motor_pin(COMRAM[2]), dc_motor2(COMRAM[2]), dc_motor1.dc_motor_pin(COMRAM[2]), dc_motor1(COMRAM[2]), 

    gpio_pin_directoin_initialize@pin	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2.dc_motor_pin(COMRAM[2]), dc_motor2(COMRAM[2]), dc_motor1.dc_motor_pin(COMRAM[2]), dc_motor1(COMRAM[2]), 

    gpio_pin_initialize@pin	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2.dc_motor_pin(COMRAM[2]), dc_motor2(COMRAM[2]), dc_motor1.dc_motor_pin(COMRAM[2]), dc_motor1(COMRAM[2]), 

    Port_Register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    Lat_Register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    Tris_Register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _application_initialize->_DC_Motor_Initialize
    _DC_Motor_Initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _DC_Motor_Stop->_gpio_pin_write_logic
    _DC_Motor_Move_Right->_gpio_pin_write_logic
    _DC_Motor_Move_Left->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6668
                                             16 COMRAM     2     2      0
                 _DC_Motor_Move_Left
                _DC_Motor_Move_Right
                      _DC_Motor_Stop
             _application_initialize
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0    1955
                _DC_Motor_Initialize
 ---------------------------------------------------------------------------------
 (2) _DC_Motor_Initialize                                  3     1      2    1952
                                             13 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     1      2    1709
                                             10 COMRAM     3     1      2
      _gpio_pin_directoin_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_directoin_initialize                        9     7      2     235
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _DC_Motor_Stop                                        3     1      2    1466
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _DC_Motor_Move_Right                                  3     1      2    1618
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _DC_Motor_Move_Left                                   3     1      2    1618
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    1223
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DC_Motor_Move_Left
     _gpio_pin_write_logic
   _DC_Motor_Move_Right
     _gpio_pin_write_logic
   _DC_Motor_Stop
     _gpio_pin_write_logic
   _application_initialize
     _DC_Motor_Initialize
       _gpio_pin_initialize
         _gpio_pin_directoin_initialize
         _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     12      35       1       41.7%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      39        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Feb 01 00:08:22 2024

                       ?_DC_Motor_Stop 002D                                     l45 FC06  
                                   l70 FED8                                     l54 FFFE  
                                  l150 FC92                                    l160 FCD8  
                                  l136 FB36                                    l145 FBC2  
                                  l155 FC4C                                    u300 FFD2  
                                  u301 FFCC                                    u310 FFD4  
                                  u320 FDDE                                    u321 FDDA  
                                  u334 FE02                                    u270 FEEC  
                                  u350 FBD6                                    u335 FDFE  
                                  u271 FEE8                                    u351 FBD2  
                                  u407 FD00                                    u344 FE68  
                                  u360 FB98                                    u345 FE64  
                                  u361 FB94                                    u417 FD2E  
                                  u370 FC1A                                    u371 FC16  
                                  u427 FD5C                                    u380 FC60  
                                  u284 FF10                                    u381 FC5C  
                                  u285 FF0C                                    u437 FD8A  
                                  u390 FCA6                                    u294 FF76  
                                  u391 FCA2                                    u295 FF72  
                                  u447 FDB8                                    _ret 0035  
                                  prod 0FF3                                    wreg 0FE8  
          DC_Motor_Move_Left@_dc_motor 002D                                   l1110 FEF0  
                                 l1112 FF4E                                   l1120 FFBA  
                                 l1104 FEDA                                   l1130 FDCC  
                                 l1210 FC8C                                   l1202 FC4E  
                                 l1114 FF56                                   l1122 FFFC  
                                 l1106 FEDA                                   l1140 FE48  
                                 l1132 FDCC                                   l1212 FC90  
                                 l1204 FC4E                                   l1220 FCA6  
                                 l1108 FEEC                                   l1134 FDDE  
                                 l1206 FC60                                   l1222 FCAE  
                                 l1118 FFB2                                   l1230 FCDA  
                                 l1144 FEA4                                   l1136 FDE2  
                                 l1208 FC68                                   l1224 FCD2  
                                 l1216 FC94                                   l1160 FBD6  
                                 l1240 FD0C                                   l1232 FCDA  
                                 l1138 FE40                                   l1146 FEAC  
                                 l1226 FCD6                                   l1218 FC94  
                                 l1162 FBDA                                   l1170 FB86  
                                 l1250 FD52                                   l1242 FD18  
                                 l1234 FCDE                                   l1148 FED6  
                                 l1164 FC06                                   l1156 FBC4  
                                 l1172 FB98                                   l1260 FDA2  
                                 l1252 FD68                                   l1244 FD24  
                                 l1236 FCEA                                   l1190 FC08  
                                 l1158 FBC4                                   l1174 FBA0  
                                 l1182 FB1E                                   l1262 FDAE  
                                 l1254 FD74                                   l1246 FD3A  
                                 l1238 FCF6                                   l1192 FC1A  
                                 l1272 FFE6                                   l1176 FBBC  
                                 l1168 FB86                                   l1184 FB1E  
                                 l1256 FD80                                   l1248 FD46  
                                 l1274 FEC0                                   l1194 FC22  
                                 l1178 FBC0                                   l1186 FB2A  
                                 l1258 FD96                                   l1196 FC46  
                                 l1188 FC08                                   l1198 FC4A  
                                 _LATA 0F89                                   _LATB 0F8A  
                                 _LATC 0F8B                                   _LATD 0F8C  
                                 _LATE 0F8D                                   _main FCDA  
                                 fsr2h 0FDA                                   indf2 0FDF  
                                 fsr1l 0FE1                                   fsr2l 0FD9  
                                 prodl 0FF3                                   start 0000  
                         ___param_bank 0000                   _gpio_pin_write_logic FDCC  
                   _DC_Motor_Move_Left FC08           DC_Motor_Move_Right@_dc_motor 002D  
                                ?_main 0023               ??_application_initialize 0033  
                                _PORTA 0F80                                  _PORTB 0F81  
                                _PORTC 0F82                                  _PORTD 0F83  
                                _PORTE 0F84                                  _TRISA 0F92  
                                _TRISB 0F93                                  _TRISC 0F94  
                                _TRISD 0F95                                  _TRISE 0F96  
                  ?_DC_Motor_Move_Left 002D                                  tablat 0FF5  
                                status 0FD8                    _DC_Motor_Initialize FB86  
                 ??_DC_Motor_Move_Left 002F                        ??_DC_Motor_Stop 002F  
                      __initialization FB5A                           __end_of_main FDCC  
                ?_gpio_pin_write_logic 0023                                 ??_main 0033  
                        __activetblptr 0002                   ?_DC_Motor_Initialize 0030  
                  _DC_Motor_Move_Right FC4E                   ?_DC_Motor_Move_Right 002D  
                               isa$std 0001                       DC_Motor_Stop@ret 002F  
                ??_DC_Motor_Initialize 0032                           __pdataCOMRAM 0001  
                               tblptrh 0FF7                                 tblptrl 0FF6  
                               tblptru 0FF8       gpio_pin_directoin_initialize@pin 0023  
     gpio_pin_directoin_initialize@ret 002B                             __accesstop 0080  
              __end_of__initialization FB7C                          ___rparam_used 0001  
                ??_DC_Motor_Move_Right 002F                 ??_gpio_pin_write_logic 0026  
                       __pcstackCOMRAM 0023                 DC_Motor_Initialize@ret 0032  
               _application_initialize FB1E                                __Hparam 0000  
                              __Lparam 0000                    _gpio_pin_initialize FBC4  
                              __pcinit FB5A                                __ramtop 1000  
                              __ptext0 FCDA                                __ptext1 FB1E  
                              __ptext2 FB86                                __ptext3 FBC4  
                              __ptext4 FEDA                                __ptext5 FC94  
                              __ptext6 FC4E                                __ptext7 FC08  
                              __ptext8 FDCC                           _Lat_Register 000B  
                 ?_gpio_pin_initialize 002D                   end_of_initialization FB7C  
                DC_Motor_Move_Left@ret 002F                          __Lmediumconst 0000  
                __end_of_DC_Motor_Stop FCDA                                postdec1 0FE5  
                              postdec2 0FDD                                postinc0 0FEE  
                              postinc2 0FDE                  ??_gpio_pin_initialize 002F  
       ?_gpio_pin_directoin_initialize 0023            __end_of_DC_Motor_Initialize FBC4  
         DC_Motor_Initialize@_dc_motor 0030                          __pidataCOMRAM FB38  
                  start_initialization FB5A                ?_application_initialize 0023  
          __end_of_DC_Motor_Move_Right FC94                            __pbssCOMRAM 0035  
       __end_of_application_initialize FB38                              _dc_motor1 0021  
                            _dc_motor2 001F              gpio_pin_write_logic@logic 0025  
                        _Port_Register 0001                 gpio_pin_initialize@pin 002D  
               gpio_pin_initialize@ret 002F                gpio_pin_write_logic@pin 0023  
              gpio_pin_write_logic@ret 002C                              copy_data0 FB6E  
           __end_of_DC_Motor_Move_Left FC4E                               __Hrparam 0000  
                             __Lrparam 0000                 DC_Motor_Stop@_dc_motor 002D  
          __end_of_gpio_pin_initialize FC08        ??_gpio_pin_directoin_initialize 0025  
                             isa$xinst 0000           __end_of_gpio_pin_write_logic FEDA  
               DC_Motor_Move_Right@ret 002F                          _DC_Motor_Stop FC94  
                        _Tris_Register 0015  __end_of_gpio_pin_directoin_initialize 0000  
        _gpio_pin_directoin_initialize FEDA  
